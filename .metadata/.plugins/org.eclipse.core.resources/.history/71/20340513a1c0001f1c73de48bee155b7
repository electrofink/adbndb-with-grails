package de.uni_koeln.hki.thaller

class InterfaceController {
	
	static allowedMethods = [save: "POST"]
	
	def index = {
		redirect(action: "show", params:params)
	}
	
	def list = {
		params.max = Math.min(params.max ? params.int('max') : 10, 100)
		
		if (!params.sort) params.sort = "id"
		if (!params.order) params.order = "asc"
		
		def persons = Person.withCriteria() {
			if (params.sort == 'personFirstnames') {
				names {
					order('firstNames', params.order)
				}
			}else if(params.sort == 'personLastname') {
				names {
					order('lastName', params.order)
				}
			}else if(params.sort == 'personConfessions') {
				confessions {
					order('title', params.order)
				}
			}else if(params.sort == 'dateOfBirth') {
					order('dateOfBirth', params.order)
			}else if(params.sort == 'dateOfDeath') {
					order('dateOfDeath', params.order)
			}else {
				order(params.sort, params.order)
			}
		}
		
		[personInstanceList: persons, personInstanceTotal: Person.count()]
		//[personInstanceList: Person.list(params), personInstanceTotal: Person.count()]
	}
	
	def create = {
		def personInstance = new Person()
		personInstance.properties = params
		[personInstance:personInstance]
	}
	
	def save = {
		def personInstance = new Person(params)
		personInstance.addToNames(new Name(params))
		personInstance.addToConfessions(new Confession(params))
		personInstance.addToLocations(new Location(params))
		personInstance.addToRelations(new Relation(params))
		personInstance.addToWorks(new Work(params))
		
		if (personInstance.save(flush: true)) {
			flash.message = "${message(code: 'default.created.message', args: [message(code: 'person.label', default: 'Person'), personInstance.id])}"
			redirect(action: "show", id: personInstance.id)
		} else {
			render(view: "create", model: [personInstance: personInstance])
		}
	}
	
	def show = {
		def personInstance = Person.get(params.id)
		if (!personInstance) {
			flash.message = "${message(code: 'default.not.found.message', args: [message(code: 'person.label', default: 'Person'), params.id])}"
			redirect(action: "list")
		}
		else {
			[personInstance: personInstance]
		}
	}
}